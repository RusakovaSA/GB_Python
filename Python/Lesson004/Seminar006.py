# a = [i for i in range(10**100) if i % 2 == 0]
# for i in a:
#     print(i)
#     if i > 20:
#         break

# b = (i for i in range(10**100) if i % 2 == 0)  кругые скобки - генератор чисел
# for i in b:
#     print(i)
#     if i > 20:
#         break

# Задача №39. Решение в группах/ Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом массиве), которых нет во втором массиве. 
# Пользователь вводит число N - количество элементов в первом массиве, затем N чисел 
# - элементы массива. Затем число M - количество элементов во втором массиве. Затем элементы второго массива
# Ввод: Вывод:
# 7 3 3 2 12
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)

# n = input("Введите элементы массива: ")
# lst_n = [int(i) for i in n.split()]
# print(lst_n)

# m = input("Введите элементы второго массива: ")
# lst_m = [int(i) for i in m.split()]
# print(lst_m)

# lst_z = lst_n - lst_m
# print(lst_z)

# Задача №41. Решение в группах/ Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала вводится число N — количество элементов в массиве 
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.
# Ввод: Ввод:
# 5 5
# 1 2 3 4 5 1 5 1 5 1
# Вывод: Вывод:
# 0 2
# (каждое число вводится с новой строки)

# a = [1, 5, 1, 5, 1]
# count = 0
# for i in range(1, len(a)-1):
#     if a[i-1] < a[i] > a[i+1]:
#         count +=1
# print(count)        
        
# Задача №43. Решение в группах Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список чисел. Все числа списка находятся на разных
# строках.
# Ввод: Вывод:
# 1 2 3 2 3 2

# a = [3, 5, 3, 3, 1]
# count = 0
# for i in range(len(a)-1):
#     for j in range(i+1, len(a)):
#         if a[i] == a[j]:
#             count +=1
# print(count)    

# Задача №45. Решение в группах Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа. По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа получает на вход одно натуральное число k, не
# превосходящее 105. Программа должна вывести все пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую пару не дает).
# Ввод: Вывод:
# 300 220 284

# def sum_del(number):
#     summa = 1
#     for i in range(2, number// 2 + 1):
#         if number % i == 0:
#             summa += i
#     return summa

# k = 300
# for i in range(k - 1):
#     for j in range(i + 1, k):
#         if sum_del(i) == j and sum_del(j) == i:
#             print(i, j)


